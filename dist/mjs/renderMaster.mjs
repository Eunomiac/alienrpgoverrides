/* ▌██░░ alienrpgoverrides v0.3 (2021) ║ MIT License ║ https://github.com/Eunomiac/alienrpgoverrides ░░██▐const SPLASHDEFS={bloodbursterBirth:{template:"modules/alienrpgoverrides/html/bloodbursterBirth.html",classes:["masked-popout","full-screen"],get position(){return getPositioning({padding:.1,aspectRatio:1.776470588235294})},options:{assets:["modules/alienrpgoverrides/assets/animation/bloodbursterBirth.webp"],isBringingToTop:!0}}},getPositioning=({height:e,width:t,padding:i,aspectRatio:s})=>{if(e&&t)return{top:.5*(window.innerHeight-e),left:.5*(window.innerWidth-t),height:e,width:t};if(e&&s)t=parseInt(e*s);else if(e&&i)t=parseInt(i<=1?window.innerWidth*(1-.5*i):window.innerWidth-2*i);else if(t&&s)e=parseInt(t/s);else if(t&&i)e=parseInt(i<=1?window.innerHeight*(1-.5*i):window.innerHeight-2*i);else if(i&&s)return window.innerWidth/window.innerHeight>s?(t=parseInt(i<=1?window.innerWidth*(1-.5*i):window.innerWidth-2*i),getPositioning({width:t,aspectRatio:s})):(e=parseInt(i<=1?window.innerHeight*(1-.5*i):window.innerHeight-2*i),getPositioning({height:e,aspectRatio:s}));return getPositioning({height:e,width:t})};class SplashElement{static get All(){return this._elements=this._elements??{}}static getTemplate(e){return SPLASHDEFS[e]?.template}static getClasses(e){return SPLASHDEFS[e]?.classes||[]}static getOptions(e){return SPLASHDEFS[e]?.options||{}}constructor(e,{top:t,left:i,height:s,width:n}={},o={}){const[r,l,a]=[SplashElement.getTemplate(e),SplashElement.getClasses(e),SplashElement.getOptions(e)];if(!r)throw new Error(`Unrecognized type: ${e}`);this._type=e,this._template=r,this._classes=l,this._top=t,this._left=i,this._height=s,this._width=n,this._options={...a,...o},this.parseOptions(),this.create()}parseOptions(){this._assets=this._options.assets??!1,this._isBringingToTop=this._options.isBringingToTop??!1}create(){this._element=new Application({popOut:!0,template:this._template,classes:this._classes})}async preload(){return this._assets&&await TextureLoader.loader.load(this._assets),!0}async render(){return this._element?(await this._element.render(!0,{top:this._top,left:this._left,height:this._height,width:this._width,focus:!0}),this._isBringingToTop&&this._element.bringToTop(),!0):(console.error("Must create the Application element before rendering it!"),!1)}async close(){await this._element.close()}}export const templates=Object.values(SPLASHDEFS).map((e=>e.template));export default{init:()=>{for(const[e,{position:t,options:i}]of Object.entries(SPLASHDEFS))SplashElement.All[e]=new SplashElement(e,t,i)},ARPGO_preloadSplashElement:e=>{SplashElement.All[e]?.preload()},ARPGO_renderSplashElement:e=>{SplashElement.All[e]?.render()},ARPGO_closeSplashElement:e=>{SplashElement.All[e]?.close()}};